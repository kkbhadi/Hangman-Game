// hangman_naman_aditya_kirandeep.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <string>
#include <ctime>
using namespace std;
#include <cctype>
const int maximum_tries = 5;
int wordguess(char guess, string secretword, string &guessword);
void mainmenu();
int start_the_game();
void controls();
void about_the_game();
void gallow_art();
void gallow_art()
{
	/****Displaying Gallow art*****/
	cout << "<>      <>\t <><<<<>>>>\t <><>      <>\t <><<<<>>>>\t <>        <>\t <><<<<>>>>\t <><>     <>" << endl;
	cout << "<>      <>\t <>      <>\t <> <>     <>\t <>        \t <><>    <><>\t <>      <>\t <><>     <>" << endl;
	cout << "<>      <>\t <>      <>\t <>  <>    <>\t <>        \t <> <>  <> <>\t <>      <>\t <> <>    <>" << endl;
	cout << "<><<<>>><>\t <><<<>>><>\t <>   <>   <>\t <>   >>><>\t <>  <><>  <>\t <><<<>>><>\t <>  <>   <>" << endl;
	cout << "<>      <>\t <>      <>\t <>    <>  <>\t <>      <>\t <>   <>   <>\t <>      <>\t <>   <>  <>" << endl;
	cout << "<>      <>\t <>      <>\t <>     <> <>\t <>      <>\t <>        <>\t <>      <>\t <>    <> <>" << endl;
	cout << "<>      <>\t <>      <>\t <>      <><>\t <><<<<>>>>\t <>        <>\t <>      <>\t <>     <><>" << endl;
	/***Hangman***/
	cout << "\n\n\n";
	cout << "|--------------------" << endl;
	cout << "|          |" << endl;
	cout << "|          |" << endl;
	cout << "|          @" << endl;
	cout << "|        |-_-|" << endl;
	cout << "|       -- : --" << endl;
	cout << "|          :" << endl;
	cout << "|         /|" << endl;
	cout << "|" << endl;
	cout << "|" << endl;
	cout << "|" << endl;
	cout << "\n\n\n";
	/****End****/
}
void mainmenu()
{

	cout << "*Main Menu*";
	cout << "\n1.Start the Game:";
	cout << "\n2.How to play/Controls:";
	cout << "\n3.About the Game:";
	cout << "\n4.Press -1 to exit the game" << endl;
}

int start_the_game()
{

	cout << "\n\n\t\t\t*****Start The Game******" << endl;
	cout << "\n\n\t\t\tWelcome to hangman...Guess the word";
	cout << "\n\n\t\t\tEach letter is represented by underscore.";
	cout << "\n\n\t\t\t You have to type one guess at a time";
	cout << "\n\n\t\t\t You have " << maximum_tries << "tries to guess the word";
	/****Array of words****/
	string name;
	char charachter; //  letters entered by user in order to guess the word
	int wrong_guess = 0; // wrong guess for the word
	int display_hangman;
	string periodic_table_word; // random word generated by the rand function
	string periodic_table_word_bank[] =
	{
		"xenon",
		"helium",
		"hydrogen",
		"argon",
		"scandium",
		"vanadium",
		"chromium",
		"manganese",
		"iron",
		"cobalt",
		"nickel",
		"copper",
		"zinc",
		"aluminium",
		"silicon",
		"phosphorus",
		"sulphur",
		"chlorine",
		"tungsten",
		"iridium",
		"platinum",
		"gold",
		"silver",
		"mercury",
		"flourine",
		"bromine",
		"iodine",
		"neon",
		"krypton",
		"radon",
		"beryllium",
		"magnesium",
		"strontium",
		"barium",
		"radium",
		"potassium",
		"sodium",
		"lithium",
		"gallium",
		"mercury",
		"tin"
	};    // list of random words 

	//choose and copy a word from array of words randomly
	srand(time(NULL));
	int n = rand() % 40;
	periodic_table_word = periodic_table_word_bank[n];

	// Initialize the periodic table  word with the * character.
	string unknown(periodic_table_word.length(), '*');
	cout << "\nrandom:" << periodic_table_word;

	// until all the guesses are used up
	while (wrong_guess < maximum_tries)
	{
		cout << "\n\n" << unknown;
		cout << "\n\nGuess a charachter: ";
		cin >> charachter;
		if (!isalpha(charachter))
		{
			do
			{
				cout << "\n\n" << unknown;
				cout << "\n\nInvalid input.Guess an alphabet: ";
				cin >> charachter;
			} while (!isalpha(charachter));

		}


		// Fill aestrik with the guessed word if matches , otherwise increment the variable 'wordguess' by 1.
		if (wordguess(charachter, periodic_table_word, unknown) == 0)
		{
			cout << endl << "Sorry!! That charachter isn't there in the word!!" << endl;
			cout << endl << "Entered wrong guess is:" << charachter << endl;
			wrong_guess++;


			display_hangman = maximum_tries - wrong_guess;
			if (display_hangman == 4)
			{

				cout << "\n\n\n";
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "\n\n\n";
			}
			else if (display_hangman == 3)
			{

				cout << "\n\n\n";
				cout << "|--------------------" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "\n\n\n";
			}
			else if (display_hangman == 2)
			{
				cout << "\n\n\n";
				cout << "|--------------------" << endl;
				cout << "|          |" << endl;
				cout << "|          |" << endl;
				cout << "|          @" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "\n\n\n";
			}
			else if (display_hangman == 1)
			{

				cout << "\n\n\n";
				cout << "|--------------------" << endl;
				cout << "|          |" << endl;
				cout << "|          |" << endl;
				cout << "|          @" << endl;
				cout << "|        |-_-|" << endl;
				cout << "|       -- : --" << endl;
				cout << "|          :" << endl;
				cout << "|         /|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "\n\n\n";
			}
			else
			{
				cout << "You've been hanged!!!";

				cout << "\n\n\n";
				cout << "|--------------------" << endl;
				cout << "|          |" << endl;
				cout << "|          |" << endl;
				cout << "|          @" << endl;
				cout << "|        |x_x|" << endl;
				cout << "|       -- : --" << endl;
				cout << "|          :" << endl;
				cout << "|         /|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "|" << endl;
				cout << "\n\n\n";
			}

		}
		else
		{
			cout << endl << "Excellent!! You guessed one charachter!!" << endl;
		}
		// indicates users about "how many tries they are left with?".
		cout << "You have " << maximum_tries - wrong_guess;
		cout << " guesses left." << endl;
		//this if statement checks if the word from wrod list is guessed by the user.
		if (periodic_table_word == unknown)
		{
			cout << periodic_table_word << endl;
			cout << "Congratulations!! You guessed right word!" << endl;
			break;
			//looping_game();
		}
	}
	if (wrong_guess == maximum_tries)
	{
		cout << "\nSorry, you lose...you've been hanged." << endl;
		cout << "The word was : \n\n" << periodic_table_word << endl;
		mainmenu();   // return to main menu after the tries for wrong guesses ended up. 
	
	return 0;
}
void controls()
{

	cout << "\tHOW TO PLAY \n \n The user enters a guess to find out the secret word. If the guess is correct,\n you may continue to guess the next character and if there are 5 wrong guesses\n your character will be hanged." << endl;

}
void about_the_game()
{
	cout << "\tABOUT THE GAME \nHangman is a classic word game in which you must guess the secret word one letter\n  at a time." << endl;

}

int wordguess(char guess, string word_to_be_guessed, string &guessword)
{
	int i;
	int matching_words = 0;
	int len = word_to_be_guessed.length();
	for (i = 0; i < len; i++)
	{
		// Did we already match this charachter in a previous guess?
		if (guess == guessword[i])
			return 0;
		// Is the guess in the secret word?
		if (guess == word_to_be_guessed[i])
		{
			guessword[i] = guess;
			matching_words++;
			cout << "\nmatching Word:" << matching_words++;

		}
	}
	return matching_words;
}

int main()
{
	int option;
	gallow_art();
	mainmenu();
	do
	{

		cout << "Enter any option(1-4):";
		cin >> option;
		while ((cin.fail() || cin.peek() != '\n') || option >= 3)
		{
			cin.clear();
			cin.ignore(512, '\n');
			cout << "Invalid Input!Enter valid integer: " << endl;
			cin >> option;
		}
		switch (option)
		{
		case 1:
			cout << "\nYou've choosen first option:" << endl;
			start_the_game();
			break;
		case 2:
			cout << "\nYou've choosen Second option:" << endl;
			controls();
			break;
		case 3:
			cout << "\nYou've choosen Third option:" << endl;
			about_the_game();
			break;
		case 4:
			if (option == -1)
			{
				break;
			}
		default:
			cout << "\nChoose any option:" << endl;
			break;
		}
	} while (option != -1);

}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file